---
name: Test Monitoring Operator Installation

on:
  workflow_run:
    workflows: ["Build Artifacts"]
    types:
      - completed
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  kind_name: kind-cluster
  namespace: monitoring

jobs:
  install_dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Display GitHub Context
        run: |
          echo "GitHub Context: ${{ toJson(github) }}"

      - name: Display Env Context
        run: |
          echo "Env Context: ${{ toJson(env) }}"

      - name: Display Vars Context
        run: |
          echo "Vars Context: ${{ toJson(vars) }}"

      - name: Display Job Context
        run: |
          echo "Job Context: ${{ toJson(job) }}"

      - name: Display Jobs Context
        run: |
          echo "Jobs Context: ${{ toJson(jobs) }}"

      - name: Display Steps Context
        run: |
          echo "Steps Context: ${{ toJson(steps) }}"

      - name: Display Runner Context
        run: |
          echo "Runner Context: ${{ toJson(runner) }}"

      - name: Display Secrets Context
        run: |
          echo "Secrets Context: ${{ toJson(secrets) }}"

      - name: Display Strategy Context
        run: |
          echo "Strategy Context: ${{ toJson(strategy) }}"

      - name: Display Matrix Context
        run: |
          echo "Matrix Context: ${{ toJson(matrix) }}"

      - name: Display Needs Context
        run: |
          echo "Needs Context: ${{ toJson(needs) }}"

      - name: Display Inputs Context
        run: |
          echo "Inputs Context: ${{ toJson(inputs) }}"

      - name: Set up Kind
        run: |
          curl -sLo ./kind https://kind.sigs.k8s.io/dl/v0.27.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/
          kind create cluster --name ${{ env.kind_name }}

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Create values.yaml
        run: |
          cat <<EOF > values.yaml
          integrationTests:
            install: true
          EOF

      - name: Install Qubership Monitoring Operator
        run: |
          helm upgrade --install qubership-monitoring-operator \
            --namespace=${{ env.namespace }} \
            --create-namespace \
            --debug \
            ./charts/qubership-monitoring-operator \
            -f values.yaml 

      - name: Check Tests Deployment Status
        run: |
          if ! kubectl rollout status deployment/monitoring-tests -n ${{ env.namespace }} --timeout=100s; then
            echo "Rollout failed. Getting pod information and logs..."
            kubectl get pods -n ${{ env.namespace }}
            
            POD_NAME=$(kubectl get pods -n monitoring --no-headers | grep 'monitoring-tests' | awk '{print $1}')
            if [ -n "$POD_NAME" ]; then
              STATUS=$(kubectl get pod -n monitoring "$POD_NAME" -o jsonpath='{.status.phase}')
              if [ "$STATUS" == "Running" ]; then
                kubectl logs -n monitoring "$POD_NAME"
              else
                echo "Pod $POD_NAME is not running. Current status: $STATUS"
              fi
            else
              echo "No pod found with name containing 'monitoring-tests'"
            fi
            exit 1
          else
            echo "Rollout succeeded."
          fi

      - name: Cleanup
        run: |
          kind delete cluster --name ${{ env.kind_name }}
