name: Deploy Documentation

on:
  push:
    branches:
      - main
      - docs/add-github-pages-docs-portal  # temporary for testing
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'requirements_mkdocs.txt'
      - '.github/workflows/docs.yaml'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'requirements_mkdocs.txt'
      - '.github/workflows/docs.yaml'
  workflow_dispatch:

permissions:
  contents: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only deploy from main branch, not from PRs
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Setup cache
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      - name: Cache MkDocs
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_mkdocs.txt

      - name: Deploy to GitHub Pages
        run: mkdocs gh-deploy --force

  # Build-only job for PRs (to test that docs build correctly)
  build-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_mkdocs.txt

      - name: Test build
        run: mkdocs build --verbose --strict 